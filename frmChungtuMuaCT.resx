<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>